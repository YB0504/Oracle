CREATE TABLE MEMBER (
	NICK VARCHAR2(30) PRIMARY KEY,
	ID VARCHAR2(40) UNIQUE,
	PASSWD VARCHAR2(40) NOT NULL,
	PROFILE_IMAGE VARCHAR2(100),
	ADDRESS VARCHAR2(200) NOT NULL,
	PHONE VARCHAR2(30) NOT NULL,
	OAUTH_TOKEN VARCHAR2(100),
	ADMIN_ROLE VARCHAR2(1) -- 일반 사용자 N, 관리자 Y
);

select * from member;

drop table MEMBER purge;

CREATE TABLE REVIEW_REPLY (
	RE_ID NUMBER PRIMARY KEY,
	RE_CONTENT VARCHAR2(100) NOT NULL,
	RE_REF NUMBER,
	RE_LEVEL NUMBER,
	RE_STEP NUMBER,
	RE_REGDATE DATE,
	POST_ID NUMBER,
	NICK VARCHAR2(30)
);

-- 시퀀스 이름 자리에 들어갈 테이블명과 ID컬럼명이 너무 긴 경우
-- 테이블명_ID_SEQ 같은 형식으로 작성 했습니다.

CREATE SEQUENCE REVIEW_REPLY_SEQ
START WITH 1
INCREMENT by 1;
        
CREATE TABLE REVIEW (
	POST_ID NUMBER PRIMARY KEY,
	TITLE VARCHAR2(50) NOT NULL,
	READ_COUNT NUMBER,
	REG_DATE DATE,
	CONTENT VARCHAR2(1000) NOT NULL,
	ITEM_TYPE VARCHAR2(20),
	TYPE_ID NUMBER,
	NICK VARCHAR2(30)
);

CREATE SEQUENCE REVIEW_SEQ
START WITH 1
INCREMENT by 1;

CREATE TABLE DAILY (
	POST_ID NUMBER PRIMARY KEY,
	TITLE VARCHAR2(50) NOT NULL,
	READ_COUNT NUMBER,
	REG_DATE DATE,
	CONTENT VARCHAR2(1000) NOT NULL,
	TEMPERATURE NUMBER,
	LATITUDE NUMBER,
	LONGITUDE NUMBER,
	TYPE_ID NUMBER,
	NICK VARCHAR2(30)
);



CREATE SEQUENCE DAILY_SEQ
START WITH 1
INCREMENT by 1;

CREATE TABLE COMMUNITY (
	POST_ID NUMBER PRIMARY KEY,
	TITLE VARCHAR2(50) NOT NULL,
	READ_COUNT NUMBER,
	REG_DATE DATE,
	CONTENT VARCHAR2(1000) NOT NULL,
	TYPE_ID NUMBER,
	NICK VARCHAR2(30)
);

ALTER TABLE COMMUNITY ADD CATEGORY VARCHAR2(20);

CREATE SEQUENCE COMMUNITY_SEQ
START WITH 1
INCREMENT by 1;

CREATE TABLE SCRAP (
	SCRAP_ID NUMBER PRIMARY KEY,
	POST_ID NUMBER,
	TYPE_ID NUMBER
);

ALTER TABLE SCRAP ADD NICK VARCHAR2(30);

CREATE SEQUENCE SCRAP_SEQ
START WITH 1
INCREMENT by 1;

CREATE TABLE REPORT (
	REPORT_ID NUMBER PRIMARY KEY,
	REASON VARCHAR2(20) NOT NULL,
	POST_ID NUMBER,
	TYPE_ID NUMBER
);

CREATE SEQUENCE REPORT_SEQ
START WITH 1
INCREMENT by 1;

CREATE TABLE LIKES (
	LIKE_ID NUMBER PRIMARY KEY,
	POST_ID NUMBER,
	TYPE_ID NUMBER
);

ALTER TABLE LIKES ADD NICK VARCHAR2(30);

CREATE SEQUENCE LIKES_SEQ
START WITH 1
INCREMENT by 1;

CREATE TABLE BOARD_TYPE (
	TYPE_ID NUMBER PRIMARY KEY,
	TYPE_NAME VARCHAR2(20)
);

CREATE SEQUENCE BOARD_TYPE_SEQ
START WITH 1
INCREMENT by 1;

CREATE TABLE FILES (
	FILE_ID NUMBER PRIMARY KEY,
    POST_ID NUMBER,
	ORIGIN_FILE_NAME VARCHAR2(100),
	STORED_FILE_NAME VARCHAR2(100),
	FILE_SIZE NUMBER,
	FILE_REG DATE,
	TYPE_ID NUMBER
);

CREATE SEQUENCE FILES_SEQ
START WITH 1
INCREMENT by 1;

CREATE TABLE COMMUNITY_REPLY (
	RE_ID NUMBER PRIMARY KEY,
	RE_CONTENT VARCHAR2(100) NOT NULL,
	RE_REF NUMBER,
	RE_LEVEL NUMBER,
	RE_STEP NUMBER,
	RE_REGDATE DATE,
	POST_ID NUMBER,
	NICK VARCHAR2(30)
);

CREATE SEQUENCE COMMUNITY_REPLY_SEQ
START WITH 1
INCREMENT by 1;

CREATE TABLE DAILY_REPLY (
	RE_ID NUMBER PRIMARY KEY,
	RE_CONTENT VARCHAR2(100) NOT NULL,
	RE_REF NUMBER,
	RE_LEVEL NUMBER,
	RE_STEP NUMBER,
	RE_REGDATE DATE,
	POST_ID NUMBER,
	NICK VARCHAR2(30)
);

CREATE SEQUENCE DAILY_REPLY_SEQ
START WITH 1
INCREMENT by 1;

ALTER TABLE DAILY
  ADD CONSTRAINT FK_BOARD_TYPE_TO_DAILY
    FOREIGN KEY (TYPE_ID)
    REFERENCES BOARD_TYPE (TYPE_ID);
ALTER TABLE REVIEW
  ADD CONSTRAINT FK_BOARD_TYPE_TO_REVIEW
    FOREIGN KEY (TYPE_ID)
    REFERENCES BOARD_TYPE (TYPE_ID);
ALTER TABLE COMMUNITY
  ADD CONSTRAINT FK_BOARD_TYPE_TO_COMMUNITY
    FOREIGN KEY (TYPE_ID)
    REFERENCES BOARD_TYPE (TYPE_ID);
ALTER TABLE REVIEW
  ADD CONSTRAINT FK_MEMBER_TO_REVIEW
    FOREIGN KEY (NICK)
    REFERENCES MEMBER (NICK);
    
ALTER TABLE REVIEW
DROP CONSTRAINT FK_MEMBER_TO_REVIEW;
    
ALTER TABLE COMMUNITY
  ADD CONSTRAINT FK_MEMBER_TO_COMMUNITY
    FOREIGN KEY (NICK)
    REFERENCES MEMBER (NICK);
ALTER TABLE DAILY
  ADD CONSTRAINT FK_MEMBER_TO_DAILY
    FOREIGN KEY (NICK)
    REFERENCES MEMBER (NICK);
ALTER TABLE DAILY_REPLY
  ADD CONSTRAINT FK_MEMBER_TO_DAILY_REPLY
    FOREIGN KEY (NICK)
    REFERENCES MEMBER (NICK);
ALTER TABLE REVIEW_REPLY
  ADD CONSTRAINT FK_MEMBER_TO_REVIEW_REPLY
    FOREIGN KEY (NICK)
    REFERENCES MEMBER (NICK);
ALTER TABLE COMMUNITY_REPLY
  ADD CONSTRAINT FK_MEMBER_TO_COMMUNITY_REPLY
    FOREIGN KEY (NICK)
    REFERENCES MEMBER (NICK);
ALTER TABLE COMMUNITY_REPLY
  ADD CONSTRAINT FK_COMM_TO_COMM_REPLY
    FOREIGN KEY (POST_ID)
    REFERENCES COMMUNITY (POST_ID);
ALTER TABLE DAILY_REPLY
  ADD CONSTRAINT FK_DAILY_TO_DAILY_REPLY
    FOREIGN KEY (POST_ID)
    REFERENCES DAILY (POST_ID);
ALTER TABLE REVIEW_REPLY
  ADD CONSTRAINT FK_REVIEW_TO_REVIEW_REPLY
    FOREIGN KEY (POST_ID)
    REFERENCES REVIEW (POST_ID);
ALTER TABLE FILES
  ADD CONSTRAINT FK_BOARD_TYPE_TO_FILES
    FOREIGN KEY (TYPE_ID)
    REFERENCES BOARD_TYPE (TYPE_ID);
ALTER TABLE SCRAP
  ADD CONSTRAINT FK_BOARD_TYPE_TO_SCRAP
    FOREIGN KEY (TYPE_ID)
    REFERENCES BOARD_TYPE (TYPE_ID);
ALTER TABLE SCRAP
    ADD CONSTRAINT FK_MEMBER_TO_SCRAP
    FOREIGN KEY (NICK)
    REFERENCES MEMBER (NICK);
ALTER TABLE LIKES
  ADD CONSTRAINT FK_BOARD_TYPE_TO_LIKES
    FOREIGN KEY (TYPE_ID)
    REFERENCES BOARD_TYPE (TYPE_ID);
ALTER TABLE LIKES
  ADD CONSTRAINT FK_MEMBER_TO_LIKES
    FOREIGN KEY (NICK)
    REFERENCES MEMBER (NICK);
ALTER TABLE REPORT
  ADD CONSTRAINT FK_BOARD_TYPE_TO_REPORT
    FOREIGN KEY (TYPE_ID)
    REFERENCES BOARD_TYPE (TYPE_ID);